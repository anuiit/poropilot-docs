"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[774],{3275:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var i=t(4848),s=t(8453);const o={},r="League Expansion",a={id:"APIs/league-exp",title:"League Expansion",description:"The League Expansion API provides methods to retrieve league expansion-related information.",source:"@site/docs/APIs/league-exp.md",sourceDirName:"APIs",slug:"/APIs/league-exp",permalink:"/poropilot-docs/APIs/league-exp",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/APIs/league-exp.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Champion",permalink:"/poropilot-docs/APIs/champion"},next:{title:"Status",permalink:"/poropilot-docs/APIs/league-status"}},d={},u=[{value:"Methods",id:"methods",level:2},{value:"<code>league_entries(queue, tier, division, page)</code>",id:"league_entriesqueue-tier-division-page",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"league-expansion",children:"League Expansion"}),"\n",(0,i.jsx)(n.p,{children:"The League Expansion API provides methods to retrieve league expansion-related information."}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"league_entriesqueue-tier-division-page",children:(0,i.jsx)(n.code,{children:"league_entries(queue, tier, division, page)"})}),"\n",(0,i.jsx)(n.p,{children:"This method retrieves league entries by queue, tier, division, and page."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"queue"}),": The type of game queue (e.g., RANKED_SOLO_5x5, RANKED_FLEX_SR, etc.)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tier"}),": The tier of the league (e.g., IRON, BRONZE, SILVER, etc.)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"division"}),": The division of the league (e.g., I, II, III, IV)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"page"}),": The page number for the league entries."]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(6540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);